apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'walle'
apply from: 'tinker-support.gradle'
android {

    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.lv.wanandroid"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                //个推应用参数，请填写您申请的 GETUI_APP_ID，GETUI_APP_KEY，GETUI_APP_SECRET 值
                GETUI_APP_ID    : "b7E31g7F7K6MA0s8xiWnZA",
                GETUI_APP_KEY   : "WsREukoQmf8D2HO6Bzitm9",
                GETUI_APP_SECRET: "LLkcDrvaLn6PpQUWP5zD81",
                //友盟 分享QQ ID
                qqappid         : "101863419"
        ]
        ndk {
            // 注意：这里需要添加项目所需 CPU 类型的最小集
            abiFilters "armeabi", "armeabi-v7a", "x86_64", "x86"
        }
    }

    signingConfigs {
        config {
            storeFile file('wanAndroid.jks')
            storePassword 'wanandroid'
            keyAlias = 'wan'
            keyPassword 'wanandroid'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    walle {
        // 指定渠道包的输出路径
        apkOutputFolder = new File("${project.buildDir}/outputs/channels");
        // 定制渠道包的APK的文件名称
        apkFileNameFormat = '${appName}-${channel}-${buildType}-v${versionName}-${versionCode}.apk';
        // 渠道配置文件
        channelFile = new File("${project.getProjectDir()}/channel")
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res-item',
                           'src/main/res',
                           'src/main/res-layout']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(path: ':core')
    //多渠道
    implementation 'com.meituan.android.walle:library:1.1.6'

    //内存泄露检测
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    //友盟基础组件库和统计SDK库依赖
    implementation 'com.umeng.umsdk:common:2.2.5'
    implementation 'com.umeng.umsdk:analytics:8.1.1'
    //友盟分享
    implementation 'com.umeng.umsdk:share-core:6.9.8'
    implementation 'com.umeng.umsdk:share-board:6.9.8'
    implementation 'com.umeng.umsdk:share-qq:6.9.8'
    implementation 'com.umeng.umsdk:share-wx:6.9.8'
    implementation 'com.umeng.umsdk:share-sina:6.9.8'

    //分享面板
    api 'com.umeng.umsdk:share-board:6.9.8'

    //个推
    implementation 'com.getui:sdk:2.14.0.0'

    implementation "com.android.support:multidex:1.0.3" // 多dex配置
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.2'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
}
